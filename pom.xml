<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.adminofthis</groupId>
	<artifactId>frequent</artifactId>
	<version>0.6.1</version>
	<name>Frequent</name>
	<packaging>pom</packaging>

	<modules>
		<module>util</module>
	</modules>

	<scm>
		<connection>scm:git:git://github.com/AdminOfThis/Frequent.git</connection>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
		<testFailureIgnore>true</testFailureIgnore>
		<maven.compiler.target>13</maven.compiler.target>
		<maven.compiler.source>13</maven.compiler.source>
	</properties>

	<dependencies>




		<dependency>
			<groupId>com.github.adminofthis</groupId>
			<artifactId>util</artifactId>
			<version>1.0.3</version>
		</dependency>

		<dependency>
			<groupId>com.github.wind-season</groupId>
			<artifactId>jasiohost</artifactId>
			<version>1.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-collections4 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.4</version>
		</dependency>

		<dependency>
			<groupId>com.github.wendykierp</groupId>
			<artifactId>JTransforms</artifactId>
			<version>3.1</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.14.1</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.rollbar/rollbar-log4j2 -->
		<dependency>
			<groupId>com.rollbar</groupId>
			<artifactId>rollbar-log4j2</artifactId>
			<version>1.7.10</version>
		</dependency>

		<!-- needed for rollback -->
		<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-simple -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.32</version>
		</dependency>





		<!-- ###################################### TESTING ####################################### -->

		<!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>4.1.0</version>
			<scope>compile</scope>
		</dependency>


		<dependency>
			<groupId>org.apache.maven.surefire</groupId>
			<artifactId>surefire-logger-api</artifactId>
			<version>3.0.0-M5</version>
			<scope>test</scope>
		</dependency>

		<!-- TESTFX -->
		<!-- https://mvnrepository.com/artifact/org.testfx/testfx-junit5 -->
		<dependency>
			<groupId>org.testfx</groupId>
			<artifactId>testfx-junit5</artifactId>
			<version>4.0.16-alpha</version>
			<!-- <scope>test</scope> -->
		</dependency>

		<dependency>
			<groupId>org.testfx</groupId>
			<artifactId>testfx-core</artifactId>
			<version>4.0.16-alpha</version>
			<!-- <scope>test</scope> -->
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.testfx/openjfx-monocle -->
		<dependency>
			<groupId>org.testfx</groupId>
			<artifactId>openjfx-monocle</artifactId>
			<version>jdk-12.0.1+2</version>
			<!-- <scope>test</scope> -->
		</dependency>


	</dependencies>

	<build>
		<sourceDirectory>src</sourceDirectory>
		<finalName>${project.name}</finalName>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/test/resources</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>


		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.7</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>prepare-agent-integration</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
						<configuration>
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<append>true</append>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Write the current git revision into ${buildnumber} and populate ${scmBranch} -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- Get the scm revision once for all modules -->
					<getRevisionOnlyOnce>true</getRevisionOnlyOnce>
					<!-- Don't fail on modified local resources -->
					<doCheck>false</doCheck>
					<!-- Don't update SCM -->
					<doUpdate>false</doUpdate>
					<!-- Use short version of git revision -->
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.openjfx</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<version>0.0.8</version>
				<configuration>
					<mainClass>main.Main</mainClass>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<generateBackupPoms>false</generateBackupPoms>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<compilerArgs>
						<arg>-Xlint:-removal</arg>
					</compilerArgs>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>dependency-tree</id>
						<!-- bind to the packaging phase -->
						<phase>package</phase>
						<goals>
							<goal>tree</goal>
						</goals>
						<configuration>
							<appendOutput>false</appendOutput>
							<scope>compile</scope>
							<outputFile>${project.build.directory}/dependencies.txt</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/classes</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-test-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/test-classes</outputDirectory>
							<resources>
								<resource>
									<directory>src/test/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
					<printSummary>true</printSummary>
					<forkCount>1</forkCount>
					<reuseForks>false</reuseForks>
					<workingDirectory>${project.basedir}/workdir</workingDirectory>
					<argLine>-Dtestfx.headless=true -Djava.library.path=. -Djni.library.path=. ${surefireArgLine}</argLine>
					<rerunFailingTestsCount>1</rerunFailingTestsCount>

					<!-- <excludes> -->
					<!-- <exclude>**/SettingControllerTest.java</exclude> -->
					<!-- <exclude>**/IOChooserTest.java</exclude> -->
					<!-- <exclude>**/WindowPositionTest.java</exclude> -->
					<!-- <exclude>**/ChannelListTest.java</exclude> -->
					<!-- <exclude>**/MainTest.java</exclude> -->
					<!-- </excludes> -->

					<executions>
						<execution>
							<phase>test</phase>
							<goals>
								<goal>test</goal>
							</goals>
						</execution>
					</executions>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>jar-with-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>

						<configuration>
							<finalName>${project.name}</finalName>
							<transformers>
								<transformer implementation="com.github.edwgiz.mavenShadePlugin.log4j2CacheTransformer.PluginsCacheFileTransformer">
								</transformer>
							</transformers>
							<verbose>false</verbose>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<appendAssemblyId>false</appendAssemblyId>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
									<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
									<addExtensions>true</addExtensions>
									<mainClass>main.Main</mainClass>
								</manifest>
								<manifestEntries>
									<!-- <Multi-Release>true</Multi-Release> -->
									<Implementation-Build>${buildNumber}</Implementation-Build>
									<Implementation-Branch>${scmBranch}</Implementation-Branch>
									<Built>${maven.build.timestamp}</Built>
								</manifestEntries>
							</archive>
						</configuration>
					</execution>

					<execution>
						<id>dist</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<verbose>false</verbose>
							<finalName>${project.name}</finalName>
							<descriptors>
								<descriptor>${basedir}/src/assembly/assemblyZip.xml</descriptor>
							</descriptors>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.github.edwgiz</groupId>
						<artifactId>maven-shade-plugin.log4j2-cachefile-transformer</artifactId>
						<version>2.15</version>
					</dependency>
				</dependencies>
			</plugin>

		</plugins>
	</build>

	<repositories>
		<repository>
			<id>project.local</id>
			<name>project</name>
			<url>file:${project.basedir}/lib</url>
		</repository>
	</repositories>
</project>
